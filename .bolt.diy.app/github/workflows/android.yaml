name: Android CI/CD

on:
  push:
    branches: [ main, stable ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build Android App
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install pnpm
        run: npm install -g pnpm
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Make Gradlew Executable
        run: chmod +x ./android/gradlew
      
      - name: Build Debug APK
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install pnpm
        run: npm install -g pnpm
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Decode Keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
          KEYSTORE_PATH: android/app/release.keystore
        run: |
          echo $ENCODED_KEYSTORE | base64 -d > $KEYSTORE_PATH
      
      - name: Build Release APK and Bundle
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: |
          cd android
          ./gradlew assembleRelease bundleRelease \
            -PMYAPP_UPLOAD_STORE_FILE=release.keystore \
            -PMYAPP_UPLOAD_KEY_ALIAS=${{ env.SIGNING_KEY_ALIAS }} \
            -PMYAPP_UPLOAD_STORE_PASSWORD=${{ env.SIGNING_STORE_PASSWORD }} \
            -PMYAPP_UPLOAD_KEY_PASSWORD=${{ env.SIGNING_KEY_PASSWORD }}
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            android/app/build/outputs/apk/release/app-release.apk
            android/app/build/outputs/bundle/release/app-release.aab
          draft: false
          prerelease: false
          body_path: changelog.md
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_CONFIG }}
          packageName: com.bolt.diy
          releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed
          changesNotSentForReview: false